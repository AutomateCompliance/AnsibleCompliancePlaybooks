# platform = multi_platform_sle,multi_platform_rhel
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure auditd Collects Information on the Use of Privileged Commands - modprobe
  hosts: '@@HOSTS@@'
  become: true
  tags:
    - CCE-85853-0
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-12.1(ii)
    - NIST-800-53-AU-12.1(iv)
    - NIST-800-53-AU-3
    - NIST-800-53-AU-3.1
    - NIST-800-53-MA-4(1)(a)
    - audit_rules_privileged_commands_modprobe
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Check if watch rule for /sbin/modprobe already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/sbin/modprobe\s+-p\s+x(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
        "container"]

    - name: Search /etc/audit/rules.d for other rules with specified key modules
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)modules$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0

    - name: Use /etc/audit/rules.d/modules.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modules.rules
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0

    - name: Add watch rule for /sbin/modprobe in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /sbin/modprobe -p x -k modules
        create: true
        mode: '0640'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0

    - name: Check if watch rule for /sbin/modprobe already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/sbin/modprobe\s+-p\s+x(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
        "container"]

    - name: Add watch rule for /sbin/modprobe in /etc/audit/audit.rules
      lineinfile:
        line: -w /sbin/modprobe -p x -k modules
        state: present
        dest: /etc/audit/audit.rules
        create: true
        mode: '0640'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
