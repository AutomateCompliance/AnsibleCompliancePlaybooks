# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium
- name: 'Limit Password Reuse: password-auth'
  hosts: '@@HOSTS@@'
  become: true
  vars:
    var_password_pam_remember: '5'
    var_password_pam_remember_control_flag: requisite
  tags:
    - CCE-83476-2
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-07-010270
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(1)(e)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.5
    - accounts_password_pam_pwhistory_remember_password_auth
    - configure_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Limit Password Reuse: password-auth: Check for existing entry'
      lineinfile:
        path: /etc/pam.d/password-auth
        create: false
        regexp: ^password.*pam_pwhistory.so.*
        state: absent
      check_mode: true
      changed_when: false
      register: pam_pwhistory
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: password-auth'
      block:

        - name: 'Limit Password Reuse: password-auth - Ensure correct control value'
          pamd:
            name: password-auth
            type: password
            control: '{{ item }}'
            module_path: pam_pwhistory.so
            new_control: '{{ var_password_pam_remember_control_flag }}'
          loop:
            - required
            - optional
            - requisite
            - sufficient
            - binding

        - name: 'Limit Password Reuse: password-auth - Ensure remember argument in
            pam_pwhistory'
          pamd:
            name: password-auth
            type: password
            control: '{{ var_password_pam_remember_control_flag }}'
            module_path: pam_pwhistory.so
            module_arguments: use_authtok remember={{ var_password_pam_remember }}
            state: args_present
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 1

    - name: 'Limit Password Reuse: password-auth - Add pam_pwhistory'
      pamd:
        name: password-auth
        type: password
        control: sufficient
        module_path: pam_unix.so
        new_type: password
        new_control: '{{ var_password_pam_remember_control_flag }}'
        new_module_path: pam_pwhistory.so
        module_arguments: use_authtok remember={{ var_password_pam_remember }}
        state: before
      when:
        - '"pam" in ansible_facts.packages'
        - pam_pwhistory.found == 0
