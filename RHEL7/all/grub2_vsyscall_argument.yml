# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# reboot = true
# strategy = restrict
# complexity = medium
# disruption = low
- name: Disable vsyscalls
  hosts: '@@HOSTS@@'
  become: true
  tags:
    - CCE-82159-5
    - NIST-800-53-CM-7(a)
    - grub2_vsyscall_argument
    - low_disruption
    - medium_complexity
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: check vsyscall argument exists
      command: grep 'GRUB_CMDLINE_LINUX.*vsyscall=' /etc/default/grub
      failed_when: false
      register: argcheck
      when:
        - '"grub2-common" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]

    - name: replace existing vsyscall argument
      replace:
        path: /etc/default/grub
        regexp: vsyscall=\w+
        replace: vsyscall=none
      when:
        - '"grub2-common" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
        - argcheck.rc == 0

    - name: add vsyscall argument
      replace:
        path: /etc/default/grub
        regexp: (GRUB_CMDLINE_LINUX=.*)"
        replace: \1 vsyscall=none"
      when:
        - '"grub2-common" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
        - argcheck.rc != 0

    - name: update bootloader menu
      command: /sbin/grubby --update-kernel=ALL --args="vsyscall=none"
      when:
        - '"grub2-common" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman",
          "container"]
